---
- name: Windows Facts report
  hosts: all

  tasks:
    - name: Register User Name
      ansible.builtin.set_fact:
        windows_user: "{{ ansible_user }}"
      no_log: true
      delegate_to: localhost
      run_once: true

    - name: Register Password
      ansible.builtin.set_fact:
        windows_password: "{{ ansible_password }}"
      no_log: true
      delegate_to: localhost
      run_once: true

    - name: Gather Ansible Facts About Host
      ansible.builtin.setup:
        gather_subset:
          - all

    - name: Debugging "ansible_facts" variable Fact
      ansible.builtin.debug:
        msg: "{{ ansible_facts }}"

    - name: Create JSON-file with Ansible Facts
      copy:
        content: |
          {% for host in ansible_play_hosts %}
          {{ hostvars[host].ansible_facts | to_nice_json }}
          {% endfor %}
        dest: ../documentation/servers/WINDOWS/json/server_facts.json
      delegate_to: localhost
      run_once: true

    - name: Create YAML-file with Ansible_fact
      ansible.builtin.copy:
        content: |
          {% for host in ansible_play_hosts %}
          {{ hostvars[host].ansible_facts | to_nice_yaml }}
          {% endfor %}
        dest: ../documentation/servers/WINDOWS/yaml/server_facts.yml
      delegate_to: localhost
      run_once: true

    - name: Add Headers row to YAML-file.
      lineinfile:
        path: ../documentation/servers/WINDOWS/yaml/server_facts.yml
        insertbefore: BOF
        line: ---
      delegate_to: localhost

    - name: Set ALL new variables Facts
      ansible.builtin.set_fact:
        nodename: "{{ ansible_facts.nodename }}"
        domain: "{{ ansible_facts.interfaces[0].dns_domain }}"
        windows_domain_member: "{{ ansible_facts.windows_domain_member }}"
        windows_domain_role: "{{ ansible_facts.windows_domain_role }}"
        distribution: "{{ ansible_facts.distribution }}"
        distribution_major_version: "{{ ansible_facts.distribution_major_version }}"
        distribution_version: "{{ ansible_facts.distribution_version }}"
        architecture: "{{ ansible_facts.architecture }}"
        bios_date: "{{ ansible_facts.bios_date }}"
        bios_version: "{{ ansible_facts.bios_version }}"
        connection_name: "{{ ansible_facts.interfaces[0].connection_name }}"
        interface_name: "{{ ansible_facts.interfaces[0].interface_name }}"
        ipv4_address: "{{ ansible_facts.interfaces[0].ipv4.address }}"
        ipv6_address: "{{ ansible_facts.interfaces[0].ipv6.address }}"
        default_gateway: "{{ ansible_facts.interfaces[0].default_gateway }}"
        mac_address: "{{ ansible_facts.interfaces[0].macaddress }}"
        lastboot: "{{ ansible_facts.lastboot }}"
        reboot_pending: "{{ ansible_facts.reboot_pending }}"
        uptime: "{{ ansible_facts.uptime_seconds }}"
        machine_id: "{{ ansible_facts.machine_id }}"
        total_memory: "{{ ansible_facts.memtotal_mb }}"
        processor: "{{ ansible_facts.env.PROCESSOR_IDENTIFIER }}"
        processor_cores: "{{ ansible_facts.processor_cores }}"
        processor_count: "{{ ansible_facts.processor_count }}"
        product_name: "{{ ansible_facts.product_name }}"

    - name: Print ALL new elements
      ansible.builtin.debug:
            msg:
              node_name: "{{ nodename }}"
              dns_domain: "{{ domain }}"
              windows_domains_member: "{{ windows_domain_member }}"
              connectiones_name: "{{ connection_name }}"
              enterfaces_name: "{{ interface_name }}"
              ipv4: "{{ ipv4_address }}"
              ipv6: "{{ ipv6_address }}"

    - name: Create CSV file with results
      copy:
        content: |
          {% for host in ansible_play_hosts %}
          {{ hostvars[host].nodename }},{{ hostvars[host].domain }},{{ hostvars[host].windows_domain_member }},{{ hostvars[host].windows_domain_role }}, {{ hostvars[host].distribution }},{{ hostvars[host].distribution_major_version }},{{ hostvars[host].distribution_version }},{{ hostvars[host].architecture }},{{ hostvars[host].bios_date }},{{ hostvars[host].bios_version }},{{ hostvars[host].connection_name }},{{ hostvars[host].interface_name }},{{ hostvars[host].ipv4_address }},{{ hostvars[host].ipv6_address }},{{ hostvars[host].default_gateway }},{{ hostvars[host].mac_address }},{{ hostvars[host].lastboot }},{{ hostvars[host].reboot_pending }},{{ hostvars[host].uptime }},{{ hostvars[host].machine_id }},{{ hostvars[host].total_memory }},{{ hostvars[host].processor }},{{ hostvars[host].processor_cores }},{{ hostvars[host].processor_count }},{{ hostvars[host].product_name }}
          {% endfor %}
        dest: ../documentation/servers/WINDOWS/csv/server_facts.csv
      delegate_to: localhost
      run_once: true

    - name: Format CSV File 1st Clean Up.
      replace:
        path: ../documentation/servers/WINDOWS/csv/server_facts.csv
        regexp: '\[|\]|"'
        replace: ''
      delegate_to: localhost
      run_once: true

    - name: Format CSV File 2nd Clean Up
      replace:
        path: ../documentation/servers/WINDOWS/csv/server_facts.csv
        regexp: "'"
        replace: ''
      delegate_to: localhost
      run_once: true

    - name: Header Row to CSV file.
      lineinfile:
        path: ../documentation/servers/WINDOWS/csv/server_facts.csv
        insertbefore: BOF
        line: Hostname,Domain,Domain Member,Domain Role,OS,Major Version,Version,Architecture,Bios Date,Bios Version,Connection Names,Interface Names,IPv4 Address,IPv6 Address,Default Gateway,MAC Address,Last Boot,Reboot Pending,Uptime Seconds,Machine ID,Total Memory (MB),Processors,Processor Cores,Processor Count,Product Name
      delegate_to: localhost

    - name: Create Markdown
      copy:
        content: |
          {% for host in ansible_play_hosts %}
          | {{ hostvars[host].nodename }} | {{ hostvars[host].domain }} | {{ hostvars[host].windows_domain_member }} | {{ hostvars[host].windows_domain_role }} |  {{ hostvars[host].distribution }} | {{ hostvars[host].distribution_major_version }} | {{ hostvars[host].distribution_version }} | {{ hostvars[host].architecture }} | {{ hostvars[host].bios_date }} | {{ hostvars[host].bios_version }} | {{ hostvars[host].connection_name }} | {{ hostvars[host].interface_name }} | {{ hostvars[host].ipv4_address }} | {{ hostvars[host].ipv6_address }} | {{ hostvars[host].default_gateway }} | {{ hostvars[host].mac_address }} | {{ hostvars[host].lastboot }} | {{ hostvars[host].reboot_pending }} | {{ hostvars[host].uptime }} | {{ hostvars[host].machine_id }} | {{ hostvars[host].total_memory }} | {{ hostvars[host].processor }} | {{ hostvars[host].processor_cores }} | {{ hostvars[host].processor_count }} | {{ hostvars[host].product_name }} |
          {% endfor %}
        dest: ../documentation/servers/WINDOWS/markdown/server_facts.md
      delegate_to: localhost
      run_once: true
    
    - name: Format Markdown File New Lines.
      replace:
        path: ../documentation/servers/WINDOWS/markdown/server_facts.md
        regexp: '],'
        replace: ']\n'
      delegate_to: localhost
      run_once: true

    - name: Format Markdown File Clean Up.
      replace:
        path: ../documentation/servers/WINDOWS/markdown/server_facts.md
        regexp: '\[|\]|"'
        replace: ''
      delegate_to: localhost
      run_once: true

    - name: Format Markdown File Commas to Pipes.
      replace:
        path: ../documentation/servers/WINDOWS/markdown/server_facts.md
        regexp: ','
        replace: ' | '
      delegate_to: localhost
      run_once: true

    - name: Format Markdown File Clean Up.
      replace:
        path: ../documentation/servers/WINDOWS/markdown/server_facts.md
        regexp: "'"
        replace: ''
      delegate_to: localhost
      run_once: true

    - name: Header Row to Markdown.
      lineinfile:
        path: ../documentation/servers/WINDOWS/markdown/server_facts.md
        insertbefore: BOF
        line: "{{ item.property }}"
      with_items:
        - { property: '| -------- | ------ | ------------- | ----------- | -- | ------------- | ------- | ------------ | --------- | ------------ | ---------------- | --------------- | ---- | ---- | --------------- | ----------- | --------- | -------------- | -------------- | ---------- | ----------------- | ---------- | --------------- | --------------- | ------------ |' }
        - { property: '| Hostname | Domain | Domain Member | Domain Role | OS | Major Version | Version | Architecture | Bios Date | Bios Version | Connection Names | Interface Names | IPv4 | IPv6 | Default Gateway | MAC Address | Last Boot | Reboot Pending | Uptime Seconds | Machine ID | Total Memory (MB) | Processors | Processor Cores | Processor Count | Product Name |' }
        - { property: '# Windows' }
      delegate_to: localhost

    #- name: Create server_facts Mind Map.
      #shell: "markmap --no-open ../documentation/servers/WINDOWS/markdown/server_facts.md -o ../documentation/SERVERS/WINDOWS/mindmap/server_facts.html"
      #register: markmap
      #delegate_to: localhost

    - name: Set ALL new variables Facts
      ansible.builtin.set_fact:
        ansible_python_interpreter: "/usr/bin/python"

    #- name: Clone GIT Repository via shell
    #  ansible.builtin.shell:
    #    git clone https://github.com/rnunezrgn/WindowsFactsv1
    ##  ansible.builtin.git:
    #    repo: git@github.com/rnunezrgn/WindowsFactsv1
    ##    repo: https://github.com/rnunezrgn/WindowsFactsv1
    ##    dest: /tmp/
    #    clone: true
    #    force: true
    #  #  accept_hostkey: true
    #  environment:
    #    GIT_ASKPASS: /bin/echo
    #    GIT_USERNAME: "{{ MY_GIT_USERNAME }}"
    #    GIT_PASSWORD: "{{ MY_GIT_PASSWORD }}"
    #  #  update: yes
    ##- name: "Add output directory to git"
    #  ansible.builtin.shell: |
     #   git config --global user.name "rnunezrgn"
    #    git config --global user.email "rnunez@redhat.com"
    #    git add ../* 
    #    git commit -m "Lets commit "
    #    git push

# "Git Add / Commit / Push#"
- name: Registering all in GIT
  hosts: localhost
  tasks:
    - name: "Init REPOSITORY!!!!"  
      ansible.builtin.shell: |
        git init

    - name: Pull-from git
      ansible.builtin.git:
        repo: https://github.com/rnunezrgn/WindowsFactsv1
        dest: /tmp/myrepo

    - name: "Configure global GIT user.name" 
      ansible.builtin.shell: |
        git config --global user.name "rnunezrgn"

    - name: "Configure global GIT user.email" 
      ansible.builtin.shell: |
        git config --global user.email "rnunez@redhat.com"

    - name: "Add output directory and files to git" 
      ansible.builtin.shell: |
        git add * 

    - name: "Git commit changes with message" 
      ansible.builtin.shell: |
        git commit -m "Lets commit "

    - name: "Push changes from local repo to Git repo"
      ansible.builtin.shell: |
        git push 
# git push "https://"{{ MY_GIT_USERNAME }}:{{ MY_GIT_PASSWORD }}"@github.com/rnunezrgn/WindowsFactsv1"

